server:
  port: ${PORT}

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

resilience4j:
  circuitbreaker:
    instances:
      externalService:
        failureRateThreshold: 50
        slidingWindowSize: 5
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
  ratelimiter:
    instances:
      externalService:
        limitForPeriod: 5
        limitRefreshPeriod: 10s
        timeoutDuration: 0

cors:
  allowed-origins:
    - http://localhost:3000

jwt:
  # Use a BASE64-encoded secret of at least 256 bits (>= 32 bytes after decode)
  # Replace this with your own! Example shown only for local/dev.
  secret: ${JWT_SECRET}
  expiration-ms: 3600000 # 1 hour = 3600000 ms

logging:
  level:
    root: INFO
    com:
      capstone:
        mind:
          backend: DEBUG
      io:
        github:
          resilience4j: DEBUG
      org:
        springframework:
          web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} | %-5level | %logger{36} | %msg%n"
  file:
    name: logs/app.log
